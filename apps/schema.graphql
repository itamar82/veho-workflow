scalar DateTime


type Warehouse {
    id: String!
    name: String!
}

type Location {
    id: String!
    warehouse: Warehouse!
    zone: String!
}

type Package {
    id: String!
    warehouse: Warehouse!
    receivedTimestamp: DateTime
    status: String!
    pallet: Pallet
}

type Pallet {
    id: String!
    warehouse: Warehouse!
    stowedTimestamp: DateTime
    packages: [Package!]!
    location: Location!
}




type Query {
    getPackagesByIds(warehouseId: String!, packageIds: [String!]!): [Package!]!
    getPalletsByIds(warehouseId: String!, palletIds: [String!]!): [Pallet!]!
    getPalletsByLocation(warehouseId: String!, locationId: String!): [Pallet!]!
}




input PackageInductionInput {
    warehouseId: String!
    packageIds: [String!]!
}

input PackageStowInput {
    warehouseId: String!
    palletId: String!
    packageIds: [String!]!
}

type ApiResponse {
    success: Boolean!
    message: String
}

type Mutation {
    inductPackages(packageInduction: PackageInductionInput!): ApiResponse!
    stowPackages(packageStow: PackageStowInput!): ApiResponse!
}

